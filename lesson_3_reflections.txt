when would you want to creat a remote repository than rather than keeping all you work local?
    =>因為存在網路上，這樣我就可以很簡單的使用不同的平台協作或是跟他人合作，而且因為有線上備份，對於資料安全多了一分保障

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    =>其實跟之前在本機端使用git自動存取的想法差不多，如果是定時或隔幾行就自動存，這樣存儲的版本意義就不大，變成只是可以回朔的大量儲存而已
      所以手動控制，在自己認為適當的時機commit才是相對比較好的選擇。

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    =>fork指令只存在github平台對github平台，因為我無權更改對方的程式內容，所以我只能用讀取的方式複製到我的github上
      接著，使用git clone指令，將github上的資料"拷貝"到我的電腦上，接下來，我就可以在本機端更新完後使用git push origin "branch名稱"更新到github上
      git clone指令也可以使用在電腦對電腦的狀況，但是目前還沒說到
      git branch指令是在本機端創造一個新的分支，這個改變在我們push到github之前，github上面都不會有我們這邊的紀錄。

What is the benefit of having a copy of the last known state of the remote
stored locally?

    =>在遠程檔案可能很多人都在編輯並存儲相對應commit的狀況下，擁有本地端資料(上次已知狀態的副本)可以清楚的知道之前對方變動多少東西，
      在合併的時候需要如何調整，如果有衝突，則在解決衝突之後，將檔案再度上傳即可將資料狀況即時更新。

      而如果對方的副本可以追朔到我目前的狀況，我要做的只有使用git pull origin "branch名稱" 就可以簡單的把最新的commit狀態merge進
      我自己電腦的本機端

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    =>在不使用git工具做更改的狀況下，我們必須自己建一個目錄，或是在每次做一個更改之後就另存一個檔案，然後使得文件佔據非常多的硬碟容量
      ，並且在多人協做的狀況下，很難合併大家的差異使得協作上更加的困難
      以目前學習到現在的角度，git的確是一個很好用的工具。

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    =>在共同協作的狀況下，如果直接在master做更改，會使得master更動頻繁，使得大家的工作更加不流暢，在工作時要處理衝突的地方更多，所以使用新branch是比較好的選項
      而如果今天協做狀況是某個主要編寫員，需要多次更改master以便大家可以使用最新的master版本做比較，這樣直接更改master比較快速。
